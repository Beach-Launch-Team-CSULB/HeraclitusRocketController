// This file was generated by ChatGPT-4 
// Please ask Mark for the chat history if needed. 
// Modifications are encouraged, beep boops. Robots are dumb.  

#include "Sensor.h"


//
Sensor::Sensor(int labelID, int pinID, int pinDigital, int pinPWM, std::string unit, 
               float rangeMin, float rangeMax, float calibrationOffset)
    :labelID(labelID),                                       // Sensor ID Number 
    pinID(pinID), 
    pinDigital(pinDigital), 
    pinPWM(pinPWM),
    unit(std::move(unit)), 
    rangeMin(rangeMin),                                      // Maximum Acceptable reading for a sensor before safety procedures are triggered
    rangeMax(rangeMax),                                      // Minimum for safety
    calibrationOffset(calibrationOffset), value(0.0f) {
    // Constructor implementation
    // This is where we might initialize hardware interfaces, if required.
}

float Sensor::getMin() const {
    return rangeMin;
}

float Sensor::getMax() const {
    return rangeMax;
}

std::string Sensor::getUnit() const {
    return unit;
}

float Sensor::getValue() const {
    return value;
}

void Sensor::updateValue(float newValue) {
    value = newValue;
    // Update the sensor value here. This method would interface with the hardware.
}

void Sensor::setCalibrationOffset(float newOffset) {
    calibrationOffset = newOffset;
    // Set a new calibration offset. May require hardware interfacing.
}
